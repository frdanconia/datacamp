% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/AggregateTopicModels.R
\name{AggregateTopicModels}
\alias{AggregateTopicModels}
\title{Aggregate many topic models in to an ensemble}
\usage{
AggregateTopicModels(posteriors, assignments, weights = NULL, drops = NULL)
}
\arguments{
\item{posteriors}{= list of models. Each element contains two
matrices, "theta" and "phi". "theta"
is the posterior prediction of topics distributed over
documents. "phi" is the posterior prediction of
terms distributed over topics.}

\item{assignments}{= a vector where each element corresponds to a
single topic from a single model. So, for example, if you
have 100 models of 50 topics, this vector will be of length
100 * 50 = 5000. The entries of the vector are numeric,
characters, or factors and provide a mapping of topics between
models. The names of this vector, correspond to *unique* names
of topics in each model.}

\item{weights}{= vector of weights of each model in aggregating. If this
is NULL, the default, each model is given equal weighting in
aggregation.}

\item{drops}{= vector of values of assignments indicating which assignments
of topics we want to drop. If NULL, the default, no topics are
dropped.}
}
\description{
This function aggregates output of several topic models into a single ensemble topic model.
}
\details{
Output:
      a list with two elements, "theta" and "phi" of
      the ensemble model.
}
\examples{
lex <- ConvertDtm2Docs(dtm)
lex <- lexicalize(lex, vocab=colnames(dtm))
my_posteriors <- lapply(1:100, function(iteration){
  lda <- lda.collapsed.gibbs.sampler(documents = lex, K = 100, vocab = colnames(dtm), num.iterations=2000, alpha=0.1, eta=0.05)
  lda <- FormatRawLdaOutput(lda.result=lda, docnames=rownames(dtm), smooth=TRUE)
})

for(j in 1:length(myposteriors)){
  rownames(myposteriors[[ j ]]$theta) <- paste(rownames(myposteriors[[ j ]]$theta), j, sep="_")
  colnames(myposteriors[[ j ]]$phi) <- paste(colnames(myposteriors[[ j ]]$phi), j, sep="_")
}

myD <- EnsembleTopicDist(posteriors=myposteriors, method="cosine")

myH <- hclust(myD, method="ward.D")

myassignments <- cutree(myH, 100)

ensemble_lda <- AggregateTopicModels(posteriors=myposteriors, assignments=myassignments)
}

